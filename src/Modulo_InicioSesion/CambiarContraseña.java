/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Modulo_InicioSesion;

import Modulo_Estudiante.ExcepcionDatosIncorrectos;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Wilson Xicará
 */
public class CambiarContraseña extends javax.swing.JDialog {
    private ResultSet infoAdmin;
    private String nombreUsuario;
    private Connection conexion;
    private final int longNombre = 15, longContraseña = 10;
    private JFrame ventanaUsuario, ventanaPadreDeUsuario;
    /**
     * Creates new form CambiarContraseña
     */
    public CambiarContraseña(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    public CambiarContraseña(Connection conexion, ResultSet infoAdmin, JFrame ventanaUsuario, JFrame ventanaPadreDeUsuario) {
        super(ventanaUsuario, true);
        initComponents();
        this.conexion = conexion;
        this.infoAdmin = infoAdmin;
        this.ventanaUsuario = ventanaUsuario;   // Ventana desde donde se realiza el cambio de contraseña
        this.ventanaPadreDeUsuario = ventanaPadreDeUsuario; // Ventana desde donde se Inicia Sesión
        try {
            this.nombreUsuario = infoAdmin.getString("NombreUsuario");
            this.setTitle("Modificación de la Cuenta de "+nombreUsuario);
            nuevo_nombre.setText(nombreUsuario);
            this.setLocationRelativeTo(null);   // Para centrar esta ventana sobre la pantalla
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "No se pueden realizar los cambios pues ocurrió un error al intentar leer el registro.\n\nDescripción:\n"+ex.getMessage(), "Error en registro", JOptionPane.ERROR_MESSAGE);
            this.dispose();
//            Logger.getLogger(CambiarContraseña.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_opciones_cuenta = new javax.swing.JPanel();
        check_cambio_nombre = new javax.swing.JCheckBox();
        etiqueta_nombre = new javax.swing.JLabel();
        nuevo_nombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        guardar_cambios = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();
        contraseña_actual = new javax.swing.JPasswordField();
        contraseña_nueva = new javax.swing.JPasswordField();
        contraseña_confirmacion = new javax.swing.JPasswordField();
        etiqueta_resultado_usuario = new javax.swing.JLabel();
        etiqueta_resultado_contraseñaNueva = new javax.swing.JLabel();
        etiqueta_resultado_confirmacion = new javax.swing.JLabel();
        etiqueta_resultado_contraseñaActual = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Modificación de Cuenta");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        panel_opciones_cuenta.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Opciones de cuenta", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        check_cambio_nombre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        check_cambio_nombre.setText("Cambiar nombre de Usuario");
        check_cambio_nombre.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                check_cambio_nombreItemStateChanged(evt);
            }
        });

        etiqueta_nombre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        etiqueta_nombre.setText("Nuevo Nombre:");
        etiqueta_nombre.setEnabled(false);

        nuevo_nombre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        nuevo_nombre.setEnabled(false);
        nuevo_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nuevo_nombreKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nuevo_nombreKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Contraseña actual:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Contraseña nueva:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Confirmar contraseña:");

        guardar_cambios.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        guardar_cambios.setText("Guardar");
        guardar_cambios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardar_cambiosActionPerformed(evt);
            }
        });

        cancelar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cancelar.setText("Cancelar");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        contraseña_actual.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        contraseña_actual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                contraseña_actualKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                contraseña_actualKeyTyped(evt);
            }
        });

        contraseña_nueva.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        contraseña_nueva.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                contraseña_nuevaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                contraseña_nuevaKeyTyped(evt);
            }
        });

        contraseña_confirmacion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        contraseña_confirmacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                contraseña_confirmacionKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                contraseña_confirmacionKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout panel_opciones_cuentaLayout = new javax.swing.GroupLayout(panel_opciones_cuenta);
        panel_opciones_cuenta.setLayout(panel_opciones_cuentaLayout);
        panel_opciones_cuentaLayout.setHorizontalGroup(
            panel_opciones_cuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_opciones_cuentaLayout.createSequentialGroup()
                .addGroup(panel_opciones_cuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_opciones_cuentaLayout.createSequentialGroup()
                        .addGroup(panel_opciones_cuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(check_cambio_nombre)
                            .addGroup(panel_opciones_cuentaLayout.createSequentialGroup()
                                .addComponent(etiqueta_nombre)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nuevo_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(etiqueta_resultado_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_opciones_cuentaLayout.createSequentialGroup()
                        .addGroup(panel_opciones_cuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_opciones_cuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(contraseña_confirmacion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(contraseña_actual, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(contraseña_nueva, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_opciones_cuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(etiqueta_resultado_contraseñaNueva, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(etiqueta_resultado_confirmacion, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(etiqueta_resultado_contraseñaActual, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panel_opciones_cuentaLayout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(guardar_cambios)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_opciones_cuentaLayout.setVerticalGroup(
            panel_opciones_cuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_opciones_cuentaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(check_cambio_nombre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_opciones_cuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel_opciones_cuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(etiqueta_nombre)
                        .addComponent(nuevo_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(etiqueta_resultado_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(panel_opciones_cuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel_opciones_cuentaLayout.createSequentialGroup()
                        .addGroup(panel_opciones_cuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(etiqueta_resultado_contraseñaActual, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panel_opciones_cuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(contraseña_actual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2)))
                        .addGap(18, 18, 18)
                        .addGroup(panel_opciones_cuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_opciones_cuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(contraseña_nueva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(etiqueta_resultado_contraseñaNueva, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_opciones_cuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(contraseña_confirmacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addComponent(etiqueta_resultado_confirmacion, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_opciones_cuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardar_cambios)
                    .addComponent(cancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel_opciones_cuenta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel_opciones_cuenta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void check_cambio_nombreItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_check_cambio_nombreItemStateChanged
        boolean seleccionado = check_cambio_nombre.isSelected();
        etiqueta_nombre.setEnabled(seleccionado);
        nuevo_nombre.setEnabled(seleccionado);
        nuevo_nombre.setText(seleccionado ? "" : nombreUsuario);
        etiqueta_resultado_usuario.setIcon(seleccionado ? new javax.swing.ImageIcon(getClass().getResource("/Imagenes/eliminar.png")) : null);
    }//GEN-LAST:event_check_cambio_nombreItemStateChanged
   /**
     * Eventos que controlan la longitud de datos en los campos de entrada.
     */
    private void nuevo_nombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nuevo_nombreKeyTyped
        if (nuevo_nombre.getText().length() == longNombre)
            evt.consume();
    }//GEN-LAST:event_nuevo_nombreKeyTyped
    private void contraseña_actualKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contraseña_actualKeyTyped
        if (contraseña_actual.getPassword().length == longContraseña)
            evt.consume();
    }//GEN-LAST:event_contraseña_actualKeyTyped

    private void contraseña_nuevaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contraseña_nuevaKeyTyped
        if (contraseña_nueva.getPassword().length == longContraseña)
            evt.consume();
    }//GEN-LAST:event_contraseña_nuevaKeyTyped
    private void contraseña_confirmacionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contraseña_confirmacionKeyTyped
        if (contraseña_confirmacion.getPassword().length == longContraseña)
            evt.consume();
    }//GEN-LAST:event_contraseña_confirmacionKeyTyped
    /**
     * Eventos que controlan que los campos de entrada no estén vacios. Además, muesttra los íconos correspondientes para
     * el caso de igualdad entre la Nueva Contraseña y su Confirmación.
     */
    private void nuevo_nombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nuevo_nombreKeyReleased
        etiqueta_resultado_usuario.setIcon((nuevo_nombre.getText().length()==0) ?
                new javax.swing.ImageIcon(getClass().getResource("/Imagenes/eliminar.png")) : null);
    }//GEN-LAST:event_nuevo_nombreKeyReleased
    private void contraseña_actualKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contraseña_actualKeyReleased
        etiqueta_resultado_contraseñaActual.setIcon(contraseña_actual.getPassword().length==0 ?
                new javax.swing.ImageIcon(getClass().getResource("/Imagenes/eliminar.png")) : null);
    }//GEN-LAST:event_contraseña_actualKeyReleased
    private void contraseña_nuevaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contraseña_nuevaKeyReleased
        etiqueta_resultado_contraseñaNueva.setIcon(contraseña_nueva.getPassword().length == 0 ?
                new javax.swing.ImageIcon(getClass().getResource("/Imagenes/eliminar.png")) : null);
        int longContraseñaN = contraseña_nueva.getPassword().length, longConfirmacion = contraseña_confirmacion.getPassword().length;
        if (longConfirmacion < longContraseñaN)
            etiqueta_resultado_confirmacion.setIcon(null);
        else if (longConfirmacion == longContraseñaN && longContraseñaN != 0) {
            etiqueta_resultado_confirmacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/"+
                    (comparar_contraseñas() ? "ok.png" : "eliminar.png"))));
        } else
            etiqueta_resultado_confirmacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/eliminar.png")));
    }//GEN-LAST:event_contraseña_nuevaKeyReleased
    private void contraseña_confirmacionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contraseña_confirmacionKeyReleased
        int longContraseñaN = contraseña_nueva.getPassword().length, longConfirmacion = contraseña_confirmacion.getPassword().length;
        if (longConfirmacion < longContraseñaN)
            etiqueta_resultado_confirmacion.setIcon(null);
        else if (longConfirmacion == longContraseñaN && longContraseñaN != 0) {
            etiqueta_resultado_confirmacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/"+
                    (comparar_contraseñas() ? "ok.png" : "eliminar.png"))));
        } else
            etiqueta_resultado_confirmacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/eliminar.png")));
    }//GEN-LAST:event_contraseña_confirmacionKeyReleased
    /**
     * Evento que intenta actualizar los datos de la Cuenta de Usuario del Administrador. Se llama a la función (rutina
     * dentro de la Base de Datos) encargada de actualizar los datos. Los valores de retorno de dicha función son:
     * -1 si el parámetro Id no exista en la Base de Datos;
     *  0 si el parámetro contraseña actual no concuerde con el registro encontrado (corresponiente al parámetro Id);
     *  1 si el cambio se hizo con éxito.
     * @param evt 
     */
    private void guardar_cambiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardar_cambiosActionPerformed
        try {
            validar_datos();
            int registroId = infoAdmin.getInt("Id");
            String nuevoNombre = (check_cambio_nombre.isSelected()) ? nuevo_nombre.getText() : "";
            String contraseñaActual = String.valueOf(contraseña_actual.getPassword());
            String contraseñaNueva = String.valueOf(contraseña_nueva.getPassword());
            
            // Ahora se llama a la función para actualizar la Cuenta de Usuario
            Statement sentencia = conexion.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY);
            // El encabezado de la función es como sigue:
            // modificarUsuario(_id, _contraseñaActual, _ContraseñaNueva, _cambiarNombre, _nuevoNombre)
            ResultSet cActualizar = sentencia.executeQuery("SELECT modificarUsuario("+registroId+", '"+contraseñaActual+"', '"+contraseñaNueva+"', "+(check_cambio_nombre.isSelected()/* ? 1 : 0*/)+", '"+nuevoNombre+"')");
            cActualizar.next();
            int resultado = cActualizar.getInt(1);
            switch (resultado) {
                case -1:    // No existe un registro con el Id especificado
                    JOptionPane.showMessageDialog(this, "El registro no se puede modificar porque no existe en la Base de Datos.\n\nConsulte con el programador para más información.", "Error en datos", JOptionPane.ERROR_MESSAGE);
                break;
                case 0:
                    JOptionPane.showMessageDialog(this, "La Contraseña actual es incorrecta.", "Error en datos", JOptionPane.ERROR_MESSAGE);
                break;
                case 1:
                    JOptionPane.showMessageDialog(this, "Cambios realizados exitosamente!\n\nPor seguridad, se cerrará su sesión.", "Datos actualizados", JOptionPane.INFORMATION_MESSAGE);
                    this.dispose();
                    ventanaUsuario.dispose();
                    ventanaPadreDeUsuario.setVisible(true);
                break;
            }
        } catch (ExcepcionDatosIncorrectos ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
//            Logger.getLogger(CambiarContraseña.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Ocurrió un error de conexión durante la actualización.\n"+ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
//            Logger.getLogger(CambiarContraseña.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_guardar_cambiosActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int opcion = JOptionPane.showOptionDialog(this, "No se han guardado los cambios.\nDesea continuar?", "Guardar cambios", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
        if (opcion == JOptionPane.YES_OPTION)
            this.dispose();
        else
            this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
    }//GEN-LAST:event_formWindowClosing

    private void validar_datos() throws ExcepcionDatosIncorrectos {
        if (check_cambio_nombre.isSelected() && nuevo_nombre.getText().length() == 0)
            throw new ExcepcionDatosIncorrectos("El Nombre de Usuario no puede ser nulo");
        if (contraseña_actual.getPassword().length == 0)
            throw new ExcepcionDatosIncorrectos("La Contraseña Actual no puede ser nula");
        if (contraseña_nueva.getPassword().length == 0)
            throw new ExcepcionDatosIncorrectos("La Nueva Contraseña no puede ser nula");
        if (!comparar_contraseñas())
            throw new ExcepcionDatosIncorrectos("La Nueva Contraseña y su Confirmación son diferentes");
    }
    /**
     * Función que compara si la contraseña y su confirmación son iguales.
     * @return 'true' si la contraseña y su confirmación son iguales; 'false' en caso contrario.
     */
    private boolean comparar_contraseñas() {
        char[] contraseña = contraseña_nueva.getPassword(), confirmacion = contraseña_confirmacion.getPassword();
        if (contraseña.length != confirmacion.length)
            return false;
        int cont = contraseña.length;
        for(int i=0; i<cont; i++) {
            if (contraseña[i] != confirmacion[i]) {
                return false;
            }
        }
        return true;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CambiarContraseña.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CambiarContraseña.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CambiarContraseña.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CambiarContraseña.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CambiarContraseña dialog = new CambiarContraseña(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelar;
    private javax.swing.JCheckBox check_cambio_nombre;
    private javax.swing.JPasswordField contraseña_actual;
    private javax.swing.JPasswordField contraseña_confirmacion;
    private javax.swing.JPasswordField contraseña_nueva;
    private javax.swing.JLabel etiqueta_nombre;
    private javax.swing.JLabel etiqueta_resultado_confirmacion;
    private javax.swing.JLabel etiqueta_resultado_contraseñaActual;
    private javax.swing.JLabel etiqueta_resultado_contraseñaNueva;
    private javax.swing.JLabel etiqueta_resultado_usuario;
    private javax.swing.JButton guardar_cambios;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField nuevo_nombre;
    private javax.swing.JPanel panel_opciones_cuenta;
    // End of variables declaration//GEN-END:variables
}
