/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Modulo_Ciclo_Escolar;

import java.awt.event.ItemEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USUARIO
 */
public class Crear_Ciclo_Escolar_3 extends javax.swing.JDialog {
     boolean copiar;
     String ciclo_nuevo;
     ArrayList<String> Id_grado;
     ArrayList<String> Id_curso;
     Connection base;
    /**
     * Creates new form Crear_Ciclo_Escolar_3
     */
    public Crear_Ciclo_Escolar_3(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
    }
    public Crear_Ciclo_Escolar_3(java.awt.Frame parent, boolean modal,Connection base,String ciclo_nuevo,String ciclo_copiar) {
        super(parent, modal);
        initComponents();
         try {
             DefaultTableModel tabla_grados = (DefaultTableModel)Grados.getModel();
             DefaultTableModel tabla_cursos = (DefaultTableModel)Cursos.getModel();
             copiar= true;
             this.base = base;
             this.ciclo_nuevo = ciclo_nuevo;
             Id_grado = new ArrayList<String>();
             Id_curso = new ArrayList<String>();
             //Tomo todos los grados del ciclo a copiar
             Statement a = base.createStatement();
             ResultSet consulta = a.executeQuery("SELECT grado.Id, grado.Nombre, grado.Seccion FROM asignacioncat INNER JOIN grado ON asignacioncat.Grado_Id = grado.Id INNER JOIN cicloescolar ON asignacioncat.CicloEscolar_Id = cicloescolar.Id WHERE asignacioncat.CicloEscolar_Id ="+ciclo_copiar+" AND asignacioncat.Curso_Id is null AND asignacioncat.Catedratico_Id is null;");
             while(consulta.next()){
                 String Id = consulta.getString(1);
                 Object[] fila = new Object[3];
                 fila[0] = false;
                 fila[1] = consulta.getString(2);
                 fila[2] = consulta.getString(3);
                 tabla_grados.addRow(fila);
                 Id_grado.add(Id);
             }
             Grados.setModel(tabla_grados);
             //Tomo todos los cursos del ciclo a copiar
             a = base.createStatement();
             consulta = a.executeQuery("SELECT curso.Id,curso.Nombre FROM asignacioncat INNER JOIN curso ON asignacioncat.Curso_Id = curso.Id INNER JOIN cicloescolar ON asignacioncat.CicloEscolar_Id = cicloescolar.Id WHERE asignacioncat.CicloEscolar_Id ="+ciclo_copiar+" AND asignacioncat.Grado_Id is null AND asignacioncat.Catedratico_Id is null;");
             while(consulta.next()){
                 String Id = consulta.getString(1);
                 Object[] fila = new Object[2];
                 fila[0] = false;
                 fila[1] = consulta.getString(2);
                 tabla_cursos.addRow(fila);
                 Id_curso.add(Id);
             }
             Cursos.setModel(tabla_cursos);
         } catch (SQLException ex) {
             Logger.getLogger(Crear_Ciclo_Escolar_3.class.getName()).log(Level.SEVERE, null, ex);
         }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton1 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Grados = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        Cursos = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Copiar Todo");
        jRadioButton1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButton1ItemStateChanged(evt);
            }
        });
        jRadioButton1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRadioButton1StateChanged(evt);
            }
        });
        jRadioButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jRadioButton1MousePressed(evt);
            }
        });

        jLabel1.setText("Grados");

        jLabel2.setText("Cursos");

        Grados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Copiar", "Nombre", "Seccion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        Grados.setEnabled(false);
        jScrollPane1.setViewportView(Grados);

        jScrollPane2.setEnabled(false);

        Cursos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Copiar", "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(Cursos);

        jButton1.setText("Crear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRadioButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 271, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(136, 136, 136))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(253, 253, 253)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(28, 28, 28)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButton1ItemStateChanged
       if(evt.getStateChange() == ItemEvent.SELECTED){
           Grados.setEnabled(false);
           Cursos.setEnabled(false);
           copiar = true;
       } 
       else if (evt.getStateChange() == ItemEvent.DESELECTED){
           Grados.setEnabled(true);
           Cursos.setEnabled(true);
           copiar = false;
       }
    }//GEN-LAST:event_jRadioButton1ItemStateChanged

    private void jRadioButton1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioButton1StateChanged
       
    }//GEN-LAST:event_jRadioButton1StateChanged

    private void jRadioButton1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton1MousePressed
       
    }//GEN-LAST:event_jRadioButton1MousePressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Si el boton esta activo copio todos los elementos
        if(copiar == true){
            //Creo la relacion de los grados con el ciclo nuevo
            for (int i = 0; i < Id_grado.size(); i++) {
                try {
                    String instruccion = "INSERT INTO asignacioncat(asignacioncat.CicloEscolar_Id,asignacioncat.Grado_Id) VALUES("+ciclo_nuevo+","+Id_grado.get(i)+");";
                    PreparedStatement  pst = base.prepareStatement(instruccion);
                    pst.executeUpdate();
                } catch (SQLException ex) {
                    Logger.getLogger(Crear_Ciclo_Escolar_3.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            //Creo la relacion de los curso con el ciclo nuevo
            for (int i = 0; i < Id_curso.size(); i++) {
                try {
                    String instruccion = "INSERT INTO asignacioncat(asignacioncat.CicloEscolar_Id,asignacioncat.Curso_Id) VALUES("+ciclo_nuevo+","+Id_curso.get(i)+");";
                    PreparedStatement  pst = base.prepareStatement(instruccion);
                    pst.executeUpdate();
                } catch (SQLException ex) {
                    Logger.getLogger(Crear_Ciclo_Escolar_3.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            this.dispose();
        }
        //Si no copio solo los elementos seleccinados
        else{
            DefaultTableModel tabla_grados = (DefaultTableModel)Grados.getModel();
            DefaultTableModel tabla_cursos = (DefaultTableModel)Cursos.getModel();
            for (int i = 0; i < Id_grado.size(); i++) {
                try {
                    boolean marcado = (boolean) tabla_grados.getValueAt(i, 0);
                    if(marcado== true){
                    String instruccion = "INSERT INTO asignacioncat(asignacioncat.CicloEscolar_Id,asignacioncat.Grado_Id) VALUES("+ciclo_nuevo+","+Id_grado.get(i)+");";
                    PreparedStatement  pst = base.prepareStatement(instruccion);
                    pst.executeUpdate();
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Crear_Ciclo_Escolar_3.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            //Creo la relacion de los curso con el ciclo nuevo
            for (int i = 0; i < Id_curso.size(); i++) {
                try {
                    boolean marcado = (boolean) tabla_cursos.getValueAt(i, 0);
                    if(marcado == true){
                    String instruccion = "INSERT INTO asignacioncat(asignacioncat.CicloEscolar_Id,asignacioncat.Curso_Id) VALUES("+ciclo_nuevo+","+Id_curso.get(i)+");";
                    PreparedStatement  pst = base.prepareStatement(instruccion);
                    pst.executeUpdate();
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Crear_Ciclo_Escolar_3.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            this.dispose();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Crear_Ciclo_Escolar_3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Crear_Ciclo_Escolar_3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Crear_Ciclo_Escolar_3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Crear_Ciclo_Escolar_3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Crear_Ciclo_Escolar_3 dialog = new Crear_Ciclo_Escolar_3(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Cursos;
    private javax.swing.JTable Grados;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
