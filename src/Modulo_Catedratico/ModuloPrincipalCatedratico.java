/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Modulo_Catedratico;

import Modulo_InicioSesion.CambiarContraseña;
import Modulo_NotasReporte.NotasPorGradoCurso;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.sql.Statement;
import java.util.logging.Logger;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Wilson Xicará
 */
public class ModuloPrincipalCatedratico extends javax.swing.JFrame {
    private Connection conexion;
    private JFrame ventanaPadre;
    private ResultSet cCatedratico;
    private ArrayList<Integer> listaIDCiclos, listaIDCursos, listaIDGrados;
    private ArrayList<Boolean> listaCicloListo, listaCicloCerrado;
    private boolean hacerVisible, ciclosCargados;
    private int idCatedratico;
    Statement stmt;
    int idcurso, idciclo;
    String Materia = "", A;
    ArrayList<String> Años;
    
    /**
     * Creates new form ModuloPrincipalCatedratico
     */
    public ModuloPrincipalCatedratico() {
        initComponents();
    }
    
    public ModuloPrincipalCatedratico(Connection conexion, JFrame ventanaPadre, ResultSet cCatedratico) {
        initComponents();
        this.conexion = conexion;
        this.ventanaPadre = ventanaPadre;
        this.cCatedratico = cCatedratico;
        hacerVisible = !(ciclosCargados = false);   // Inicialmente se intentará mostrar la ventena, y no se han cargado los ciclos
        
        // Obtención de datos importantes desde la Base de Datos
        try {
            Statement sentencia = conexion.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY);
            ResultSet cConsulta;
            // Obtención de información de la cuenta de usuario
            this.setTitle("Sesión iniciada: "+cCatedratico.getString("NombreUsuario"));
            etiqueta_bienvenida.setText("Bienvenido Catedrático '"+cCatedratico.getString("NombreUsuario")+"'");
            idCatedratico = cCatedratico.getInt("Catedratico_Id");
            // Obtención de los datos del Catedrático
            cConsulta = sentencia.executeQuery("SELECT C.Nombres, C.Apellidos FROM Catedratico C WHERE Id = "+ idCatedratico);
            cConsulta.next();
            etiqueta_nombres.setText(cConsulta.getString("Nombres"));
            etiqueta_apellidos.setText(cConsulta.getString("Apellidos"));
            // Obtención de todos los Ciclos Escolares existentes en la Base de Datos
            cConsulta = sentencia.executeQuery("SELECT Id, Anio, Listo, Cerrado FROM CicloEscolar");
            listaIDCiclos = new ArrayList<>();
            listaCicloListo = new ArrayList<>();
            listaCicloCerrado = new ArrayList<>();
            listaIDCursos = new ArrayList<>();
            listaIDGrados = new ArrayList<>();
            while (cConsulta.next()) {
                listaIDCiclos.add(cConsulta.getInt("Id"));
                listaCicloListo.add(cConsulta.getBoolean("Listo"));
                listaCicloCerrado.add(cConsulta.getBoolean("Cerrado"));
                ciclo_escolar.addItem(cConsulta.getString("Anio"));
            } ciclosCargados = true;
            ciclo_escolar.setSelectedIndex(-1);
            ciclo_escolar.setSelectedIndex(ciclo_escolar.getItemCount()-1);
            // Otras configuraciones importantes
            this.setLocationRelativeTo(null);
        } catch (SQLException ex) {
            hacerVisible = false;
            JOptionPane.showMessageDialog(this, "No se puede extraer información desde la Base de Datos.\n\nDescripción:\n"+ex, "Error en conexión", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(ModuloPrincipalCatedratico.class.getName()).log(Level.SEVERE, null, ex);
        }
        ventanaPadre.setVisible(!hacerVisible);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        etiqueta_bienvenida = new javax.swing.JLabel();
        ciclo_escolar = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        etiqueta_nombres = new javax.swing.JLabel();
        etiqueta_apellidos = new javax.swing.JLabel();
        cerrar_sesion = new javax.swing.JButton();
        etiqueta_aviso = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_cursos_grados = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        menu_opciones = new javax.swing.JMenu();
        item_cambiar_contrasenia = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sesión iniciada: Catedrático");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        etiqueta_bienvenida.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        etiqueta_bienvenida.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        etiqueta_bienvenida.setText("Bienvenido Catedrático 'UsuarioCat'");

        ciclo_escolar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ciclo_escolar.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ciclo_escolarItemStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Ciclo escolar:");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos del catedrático", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Nombres:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Apellidos:");

        etiqueta_nombres.setBackground(new java.awt.Color(255, 255, 255));
        etiqueta_nombres.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        etiqueta_nombres.setOpaque(true);

        etiqueta_apellidos.setBackground(new java.awt.Color(255, 255, 255));
        etiqueta_apellidos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        etiqueta_apellidos.setOpaque(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(etiqueta_apellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etiqueta_nombres, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(etiqueta_nombres, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3)))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(etiqueta_apellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cerrar_sesion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cerrar_sesion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Regresar.png"))); // NOI18N
        cerrar_sesion.setText("Cerrar Sesión");
        cerrar_sesion.setToolTipText("");
        cerrar_sesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrar_sesionActionPerformed(evt);
            }
        });

        etiqueta_aviso.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        etiqueta_aviso.setText("Estado del ciclo escolar seleccionado");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Grados y Cursos asignados (doble clic para editar las Notas):", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        tabla_cursos_grados = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex,int colIndex){
                return false;
            }
        };
        tabla_cursos_grados.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tabla_cursos_grados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Nombre del Curso", "Grado", "Sección", "Ciclo Escolar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_cursos_grados.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tabla_cursos_grados.setRowHeight(25);
        tabla_cursos_grados.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabla_cursos_grados.getTableHeader().setReorderingAllowed(false);
        tabla_cursos_grados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabla_cursos_gradosMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tabla_cursos_grados);
        if (tabla_cursos_grados.getColumnModel().getColumnCount() > 0) {
            tabla_cursos_grados.getColumnModel().getColumn(0).setPreferredWidth(40);
            tabla_cursos_grados.getColumnModel().getColumn(1).setPreferredWidth(300);
            tabla_cursos_grados.getColumnModel().getColumn(2).setPreferredWidth(100);
            tabla_cursos_grados.getColumnModel().getColumn(3).setPreferredWidth(100);
            tabla_cursos_grados.getColumnModel().getColumn(4).setPreferredWidth(100);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
        );

        menu_opciones.setText("Opciones");

        item_cambiar_contrasenia.setText("Cambiar contraseña");
        item_cambiar_contrasenia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                item_cambiar_contraseniaActionPerformed(evt);
            }
        });
        menu_opciones.add(item_cambiar_contrasenia);

        jMenuBar1.add(menu_opciones);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(etiqueta_bienvenida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(cerrar_sesion, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 254, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ciclo_escolar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(etiqueta_aviso))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(cerrar_sesion, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(etiqueta_bienvenida)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(ciclo_escolar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(etiqueta_aviso)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ciclo_escolarItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ciclo_escolarItemStateChanged
        // Al seleccionar un nuevo ciclo escolar se cargarán los cursos y grados asignados en el ciclo seleccionado
        int cicloSelec = ciclo_escolar.getSelectedIndex();
        if (ciclosCargados && cicloSelec != -1) {
            // Obtención de los Cursos, Grado y Sección asignados al Catedrático en el Ciclo Escolar seleccionado
            try {
                Statement sentencia = conexion.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY);
                ResultSet cConsulta = sentencia.executeQuery("SELECT Curso.Id idCurso, Curso.Nombre Curso, Grado.Id idGrado, Grado.Nombre Grado, Grado.Seccion FROM AsignacionCAT "
                        + "INNER JOIN Curso ON AsignacionCAT.Curso_Id = Curso.Id "
                        + "INNER JOIN Grado ON AsignacionCAT.Grado_Id = Grado.Id "
                        + "WHERE AsignacionCAT.Catedratico_Id = "+idCatedratico+" AND AsignacionCAT.Cicloescolar_Id = "+listaIDCiclos.get(cicloSelec));
                listaIDCursos.clear();
                listaIDGrados.clear();
                DefaultTableModel modelCursos = (DefaultTableModel)tabla_cursos_grados.getModel();
                modelCursos.setRowCount(0); // Elimino los registros de la selección anterior
                int contador = 0;
                while (cConsulta.next()) {
                    listaIDCursos.add(cConsulta.getInt("idCurso"));
                    listaIDGrados.add(cConsulta.getInt("idGrado"));
                    modelCursos.addRow(new String[]{
                        ""+(++contador),
                        cConsulta.getString("Curso"),
                        cConsulta.getString("Grado"),
                        cConsulta.getString("Seccion"),
                        ciclo_escolar.getSelectedItem().toString()
                    });
                }
                // Indico el estado del ciclo escolar seleccionado
                if (!listaCicloListo.get(cicloSelec))
                    etiqueta_aviso.setText("El Ciclo Escolar "+ciclo_escolar.getSelectedItem().toString()+" no está Listo.");
                else if (listaCicloCerrado.get(cicloSelec))
                    etiqueta_aviso.setText("El Ciclo Escolar "+ciclo_escolar.getSelectedItem().toString()+" ya fue Cerrado.");
                else
                    etiqueta_aviso.setText("");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "No se pudo extraer los Cursos asignados.\n\nDescripción:\n"+ex.getMessage(), "Error en conexión", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(ModuloPrincipalCatedratico.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_ciclo_escolarItemStateChanged

    private void tabla_cursos_gradosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_cursos_gradosMousePressed
        // La tabla tiene la propiedad de que sólo se puede seleccionar una fila a la vez
        if (evt.getClickCount() > 1) {
            int index = tabla_cursos_grados.getSelectedRow();
            this.setEnabled(false);
            NotasPorGradoCurso notas = new NotasPorGradoCurso(conexion, this, listaIDCiclos.get(ciclo_escolar.getSelectedIndex()), listaIDGrados.get(index), listaIDCursos.get(index));
            notas.setVisible(notas.getHacerVisible());
        }
    }//GEN-LAST:event_tabla_cursos_gradosMousePressed

    private void item_cambiar_contraseniaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_item_cambiar_contraseniaActionPerformed
        new CambiarContraseña(conexion, cCatedratico, this, ventanaPadre).setVisible(true);
    }//GEN-LAST:event_item_cambiar_contraseniaActionPerformed

    private void cerrar_sesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrar_sesionActionPerformed
        ventanaPadre.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_cerrar_sesionActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int opcion = JOptionPane.showOptionDialog(this, "Está seguro que desea cerrar sesión?", "Cerrar sesión", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
        boolean cerrarSesion = (opcion == JOptionPane.YES_OPTION);
        ventanaPadre.setVisible(cerrarSesion);
        this.setDefaultCloseOperation(cerrarSesion ? DISPOSE_ON_CLOSE : DO_NOTHING_ON_CLOSE);
        
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModuloPrincipalCatedratico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModuloPrincipalCatedratico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModuloPrincipalCatedratico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModuloPrincipalCatedratico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModuloPrincipalCatedratico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cerrar_sesion;
    private javax.swing.JComboBox<String> ciclo_escolar;
    private javax.swing.JLabel etiqueta_apellidos;
    private javax.swing.JLabel etiqueta_aviso;
    private javax.swing.JLabel etiqueta_bienvenida;
    private javax.swing.JLabel etiqueta_nombres;
    private javax.swing.JMenuItem item_cambiar_contrasenia;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu menu_opciones;
    private javax.swing.JTable tabla_cursos_grados;
    // End of variables declaration//GEN-END:variables
}
