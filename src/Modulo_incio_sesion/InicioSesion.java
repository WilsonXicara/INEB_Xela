/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Modulo_incio_sesion;

import Catedratico.ModuloPrincipalCatedratico;
import Conexion.ConectarBD;
import ModuloAdministrador.ModuloPrincipalAdmin;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author Wilson Xicará
 */
public class InicioSesion extends javax.swing.JFrame {
    private Connection conexion;
    private String ipServidor;
    /**
     * Creates new form InicioSesion
     */
    public InicioSesion() {
        initComponents();
        this.setLocationRelativeTo(null);   // Para centrar esta ventana sobre la pantalla.
        // Antes de iniciar todo, intento realizar la conexión con el servidor donde está la Base de Datos.
        ConectarBD obtenerConexion = new ConectarBD(new javax.swing.JFrame(), true);
        obtenerConexion.setVisible(obtenerConexion.getHacerVisible());
        conexion = obtenerConexion.getConexion();
        if (conexion == null) {
            JOptionPane.showMessageDialog(this, "No se pudo conectar con la base de datos", "ERROR", JOptionPane.ERROR_MESSAGE);
            System.exit(0);
        }
        ipServidor = obtenerConexion.getDireccionIPServidor();
        // Después, compruebo si ya existe el Administrador Principal
        try {
            if (!buscar_usuario_principal()) {
                int opcion = JOptionPane.showOptionDialog(this,
                    "Aún no se ha creado el Usuario Principal para el programa.\nEl Usuario Principal es el que tendrá acceso a todas\nlas funcionalidades del sistema.\n\nDesea crearlo ahora?",
                    "Seleccione una opción", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE, null, null, null);
                if (opcion == JOptionPane.YES_OPTION) {
                    CrearAdminPrincipal crearPrincipal = new CrearAdminPrincipal(new javax.swing.JFrame(), true, conexion);
                    crearPrincipal.setVisible(true);
                    if (!crearPrincipal.isAdministradorPrincipalCreado()) {
                        JOptionPane.showMessageDialog(this, "No se ha definido el Usuario Principal.\nRecuerde crearlo la próxima vez que inicie el programa.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                        System.exit(0); // Si no se crea el usuario principal, se cierra el programa
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "No se ha definido el Usuario Principal.\nRecuerde crearlo la próxima vez que inicie el programa.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                    System.exit(0); // Si no se crea el usuario principal, se cierra el programa
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error de conexión con la Base de Datos", "Error", JOptionPane.ERROR_MESSAGE);
//            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            System.exit(0); // En caso de ocurrir un error, cierro el programa
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        saludo = new javax.swing.JLabel();
        iniciar_sesion = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        usuario = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        contraseña = new javax.swing.JPasswordField();
        jMenuBar1 = new javax.swing.JMenuBar();
        menu_ver = new javax.swing.JMenu();
        item_ver_ip_servidor = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Iniciar Sesión");
        setResizable(false);

        saludo.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        saludo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        saludo.setText("BIENVENIDO");

        iniciar_sesion.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        iniciar_sesion.setText("Iniciar Sesión");
        iniciar_sesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciar_sesionActionPerformed(evt);
            }
        });
        iniciar_sesion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                iniciar_sesionKeyTyped(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(169, 50, 38));

        usuario.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Usuario:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Contraseña:");

        contraseña.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(contraseña)
                    .addComponent(usuario, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(usuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(contraseña, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(82, Short.MAX_VALUE))
        );

        menu_ver.setText("Ver");

        item_ver_ip_servidor.setText("IP del servidor");
        item_ver_ip_servidor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                item_ver_ip_servidorActionPerformed(evt);
            }
        });
        menu_ver.add(item_ver_ip_servidor);

        jMenuBar1.add(menu_ver);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(saludo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(iniciar_sesion, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(120, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(saludo, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(iniciar_sesion)
                .addContainerGap(99, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void item_ver_ip_servidorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_item_ver_ip_servidorActionPerformed
        JOptionPane.showMessageDialog(this, "Dirección IP del Servidor:\n\n"+ipServidor, "Información", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_item_ver_ip_servidorActionPerformed

    private void iniciar_sesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciar_sesionActionPerformed
        try {
            iniciar_sesion();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Ocurrió un error al intentar conectarse con la Base de Datos.\n"+ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
//            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_iniciar_sesionActionPerformed

    private void iniciar_sesionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_iniciar_sesionKeyTyped
        char code = evt.getKeyChar();
        if(code == '\n'){
            try {
                iniciar_sesion();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Ocurrió un error al intentar conectarse con la Base de Datos.\n"+ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
//                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_iniciar_sesionKeyTyped

    private void iniciar_sesion() throws SQLException {
        Statement sentencia = conexion.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY);
        String contraseña_entrada = String.valueOf(contraseña.getPassword()), usuario_entrada = usuario.getText();
        String tipoEnBD;
        ResultSet cUsuarios = sentencia.executeQuery("CALL obtenerUsuario('"+usuario_entrada+"', '"+contraseña_entrada+"')");
        if(cUsuarios.next()) {  // El Usuario y la Contraseña son correctos
            tipoEnBD = cUsuarios.getString(4);
            if(tipoEnBD.equals("3")) {  // Se inicia sesión como Catedrático
                this.dispose();
                //b.previous();
                ModuloPrincipalCatedratico s = new ModuloPrincipalCatedratico(conexion, cUsuarios);
                s.setVisible(true);
                //this.show(true);
            }
            else {  // Se inicia sesión como Administrador (Principal o Secundarios)
                ResultSet cAdmin = sentencia.executeQuery("SELECT * FROM Usuarios U INNER JOIN Administrador A ON U.Administrador_Id = A.Id WHERE U.Administrador_Id = " + cUsuarios.getString(6)+";");
                cAdmin.next();
                this.setVisible(false);
                new ModuloPrincipalAdmin(conexion, cAdmin, this).setVisible(true);
                usuario.setText("");
                contraseña.setText("");
            }
        } else
            JOptionPane.showMessageDialog(this, "El Usuario o la Contraseña son incorrectos.", "Error", JOptionPane.ERROR_MESSAGE, null);
    }
    
    private boolean buscar_usuario_principal() throws SQLException {
        Statement sentencia = conexion.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY);
        ResultSet cAdmin = sentencia.executeQuery("SELECT COUNT(Id) Admins FROM Administrador");
        cAdmin.next();
        return (cAdmin.getInt(1) != 0);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InicioSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InicioSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InicioSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InicioSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InicioSesion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField contraseña;
    private javax.swing.JButton iniciar_sesion;
    private javax.swing.JMenuItem item_ver_ip_servidor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JMenu menu_ver;
    private javax.swing.JLabel saludo;
    private javax.swing.JTextField usuario;
    // End of variables declaration//GEN-END:variables
}
